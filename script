#!/bin/bash
#Raspberry Pi setup script
host="http://signs.pilotpen.com"
rotation=0
noEth=0
killApache=0
silent=0
kernel=0

main () {
    if [ $(id -u) = "0" ]; then
        echo You cannot be root to run this script >&2
        exit 1
    fi

    kernel=`uname -r | grep -E "^[0-9]+\.[0-9]+" -o`

    if ! isEth0Connected; then
      sleep 3;
    fi

    isEth0Connected
    noEth=$?

    parseParameters "$@"
    keyboard
    hostname
    reboot
    if [ $silent -ne 1 ]; then
      menu
    else
      genericSetup
    fi
    
    if [ "$rebootChoice" = "Y" ]; then
        echo "Rebooting"
        sudo reboot
    else
        if pgrep iceweasel > /dev/null; then
            wget -q http://signs.pilotpen.com/api/redirect/$(/bin/hostname -I|awk '{print $1}')/$(echo $url | awk 'BEGIN {FS="/"} {print $NF}') -O /tmp/wget-trash
        else
            (iceweasel $url --display=:0 --profile kioskProfile &) > /dev/null 2>&1
        fi
        (echo "on 0" > /dev/cec) &
        sleep 3
        (echo "as" > /dev/cec) &
    fi
}

isEth0Connected() {
    #Check for kernel < 4.9
    if ifconfig eth0 | grep "inet addr:" > /dev/null; then
      return 0;
    fi

    #Check for kernel >= 4.9
    if (ifconfig eth0 | grep "inet " | grep "netmask " | grep "broadcast " > /dev/null) && (ifconfig eth0 | grep "inet6 " > /dev/null); then
      return 0;
    fi

    #Not connected
    return 1;
}

parseParameters() {
  silent=0
  killApache=1
  while [ "$1" != "" ]; do
    case $1 in
      -s | --silent )
        silent=1
        if [ -f /var/local/url ]; then
          url=`cat /var/local/url`
        else
          url="http://signs.pilotpen.com/Info"
        fi
        rotation=`cat /boot/config.txt | grep display_rotate | awk 'BEGIN{FS="="} {print $2}'`
        if [ "$rotation" == "" ]; then
           rotation=0;
        fi
        ;;
      --nokill )
        killApache=0
    esac
    shift
  done
}

keyboard() {
    sudo tee /etc/default/keyboard > /dev/null << _EOF_
# KEYBOARD CONFIGURATION FILE

# Consult the keyboard(5) manual page.

XKBMODEL="pc105"
XKBLAYOUT="us"
XKBVARIANT=""
XKBOPTIONS=""

BACKSPACE="guess"
_EOF_
}

hostnamePre() {
    name=`cat /etc/hostname`
    if [ "$name" == "raspberrypi" ] ; then
        mac=`ifconfig eth0 | grep -E "([a-f0-9]{2}\:){5}[a-f0-9]{2}" -o | awk 'BEGIN{FS=":"} {print $5$6}'`
        newName="rpi-$mac"
        echo $newName | sudo tee /etc/hostname > /dev/null
        sudo tee /etc/hosts > /dev/null << _EOF_
127.0.0.1       localhost
::1             localhost ip6-localhost ip6-loopback
ff02::1         ip6-allnodes
ff02::2         ip6-allrouters

127.0.1.1       $newName
_EOF_
    fi

}

hostname() {
    hostnamePre
    name=`cat /etc/hostname`
    echo -n "Hostname [$name]: "
    if [ $silent -ne 1 ]; then
      read newName
    fi
    if [ "$newName" != "" ] && [ "$newName" != "$name" ]; then
        echo $newName | sudo tee /etc/hostname > /dev/null
        sudo tee /etc/hosts > /dev/null << _EOF_
127.0.0.1       localhost
::1             localhost ip6-localhost ip6-loopback
ff02::1         ip6-allnodes
ff02::2         ip6-allrouters

127.0.1.1       $newName
_EOF_
    fi
}

reboot() {
    echo -n "Reboot after setup [Y]: "
    if [ $silent -ne 1 ]; then
      read rebootChoice
    else
      rebootChoice="N"
    fi
    if [ "$rebootChoice" = "" ]; then
        rebootChoice="Y"
    else
        rebootChoice="${rebootChoice^^}"
    fi
}

menu () {
    selection=0

    while [ true ]; do
        cat << _EOF_
Please select one of the following choices:
    1) Setup a single machine display
    2) Setup a schedule display
    3) Setup a lanes display
_EOF_
        read selection
        case $selection in
        1 ) 
            singleMachineDisplay
            genericSetup
            break
        ;;
        2 ) 
            scheduleDisplay
            genericSetup
            break
        ;;
        3 ) 
            lanesDisplay
            genericSetup
            break
        ;;
        * ) 
            echo "Invalid Choice"
            echo 
        esac
    done
}

genericSetup() {
    #Set TimeZone
    sudo cp /usr/share/zoneinfo/US/Eastern /etc/localtime

    command -v cec-client >/dev/null 2>&1
    hasCec=$?
    command -v iceweasel >/dev/null 2>&1
    hasIceweasel=$?
    command -v unclutter >/dev/null 2>&1
    hasUnclutter=$?
    command -v php > /dev/null 2>&1
    hasPhp=$?
    command -v omxplayer > /dev/null 2>&1
    hasOmx=$?
    command -v x11vnc > /dev/null 2>&1
    hasVnc=$?
    apachectl -t -D DUMP_MODULES 2>&1 | grep rewrite_module > /dev/null
    hasRewriteModule=$?
    apachectl -t -D DUMP_MODULES 2>&1 | grep headers_module > /dev/null
    hasHeadersModule=$?
    apachectl -t -D DUMP_MODULES 2>&1 | grep ssl_module > /dev/null
    hasSslModule=$?

    allInstalled=$((hasCec == 0 && hasIceweasel == 0 && hasUnclutter == 0 && hasPhp == 0 && hasRewriteModule == 0 && hasHeadersModule == 0 && hasOmx == 0 && hasSslModule == 0 && hasVnc == 0))
    
    if [ $allInstalled -ne 1 ]; then
        echo Updating apt-get
        sudo apt-get update  #&>/dev/null
        if [ $? -ne 0 ]; then
            echo Error updating apt-get. >&2
            exit 2
        fi
        echo Installing prerequisites
        if [ "$kernel" == "4.4" ]; then
            sudo apt-get install -y --force-yes iceweasel unclutter php5 libapache2-mod-php5 vim omxplayer x11vnc
        else
            sudo apt-get install -y iceweasel unclutter php7.0 php7.0-xml vim omxplayer x11vnc
        fi
        if [ $? -ne 0 ]; then
            echo Error installing prerequisites. >&2
            exit 3
        fi

        sudo a2enmod rewrite headers ssl > /dev/null
        if [ $killApache -eq 1 ]; then
          sudo service apache2 restart
        fi

        if [ $hasCec -ne 0 ]; then
            cecInstall
        fi    
    fi

    cd
    rm -rf libcec
    rm -rf platform
    
    echo Install Profile
    if [ ! -f kioskProfile.tar ]; then
        wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/kioskProfile.tar -q --progress=bar --show-progress
    fi
    md5=`md5sum kioskProfile.tar`
    if [ "$md5" != "67377b11c05cfd673ff357a29c6c2c59  kioskProfile.tar" ] && [ $noEth -ne 1 ]; then
        #If profile update is required, need to kill iceweasel
        killall -q iceweasel
        wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/kioskProfile.tar -O kioskProfile.tar -q --progress=bar --show-progress
    fi

    if [ -d ~/kioskProfile ]; then
        rm -rf ~/kioskProfile
    fi
    mkdir ~/kioskProfile
    tar -xf kioskProfile.tar -C ~/kioskProfile
    
    echo Apache Config
    if [ $noEth -ne 1 ]; then
      sudo wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/apache2.conf -O /etc/apache2/apache2.conf -q --progress=bar --show-progress
      wget https://signs.pilotpen.com/Cert/domain.cer -O /home/pi/domain.cer -q --progress=bar --show-progress
      wget https://signs.pilotpen.com/Cert/domain.key.txt -O /home/pi/domain.key -q --progress=bar --show-progress
      wget https://signs.pilotpen.com/Cert/domain-ca.crt -O /home/pi/domain-ca.crt -q --progress=bar --show-progress
      sudo wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/000-default.conf -O /etc/apache2/sites-available/000-default.conf -q --progress=bar --show-progress
    fi
    #run apache as pi user and pi group
    sudo sed -i s/www-data/pi/g /etc/apache2/envvars
    if [ $killApache -eq 1 ]; then
      sudo service apache2 restart
    fi

    echo VNC Password
    if [ $noEth -ne 1 ]; then
      mkdir -p ~/.vnc
      sudo wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/passwd -O ~/.vnc/passwd -q --progress=bar --show-progress
    fi

    echo Video Player script
    if [ $noEth -ne 1 ]; then
      wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/videoplayer -O /home/pi/videoplayer -q --progress=bar --show-progress
    fi
    chmod 755 /home/pi/videoplayer

    echo Grabbing Videos
    if [ $noEth -ne 1 ]; then
      wget https://raw.githubusercontent.com/PilotCorp/RPI/develop/DownloadVideos.php -O DownloadVideos.php -q --progress=bar --show-progress
      php DownloadVideos.php
    fi

    echo Setting Rotation
    if grep -E "display_rotate=[0-9]+" /boot/config.txt > /dev/null; then
        sudo sed -i s/display_rotate=[0-9]/display_rotate=$rotation/ /boot/config.txt
    else
        echo | sudo tee -a /boot/config.txt > /dev/null
        echo "#Setting Roation" | sudo tee -a /boot/config.txt > /dev/null
        echo "display_rotate="$rotation | sudo tee -a /boot/config.txt > /dev/null
    fi
    
    echo Configuring autostart
    if [ $noEth -ne 1 ]; then
      cecCountInRcLocal=`grep cec /etc/rc.local | wc | awk '{print $1}'`
      if [ $cecCountInRcLocal -lt 5 ]; then
        sudo sed -i '/^exit 0/d' /etc/rc.local

        sudo tee -a /etc/rc.local > /dev/null << _EOF_
if [ ! -p /dev/cec ]; then
  sudo mkfifo /dev/cec
  sudo chmod 666 /dev/cec
fi
(tail -f /dev/null > /dev/cec &) > /dev/null
(cat /dev/cec | cec-client -o RPI -t p &) > /dev/null

exit 0
_EOF_
        
      fi
    fi

    autostart="/home/pi/.config/lxsession/LXDE-pi/autostart"
    if ! grep "home/pi/setup" $autostart > /dev/null; then
        tee -a $autostart > /dev/null << _EOF_
@xscreensaver -no-splash
@xset s noblank
@xset s off
@xset -dpms
unclutter -display :0 -noevents -grab
/home/pi/setup --silent
_EOF_
    fi

   tee ~/.xsessionrc > /dev/null << _EOF_
# Start X11VNC
x11vnc -bg -nevershared -forever -tightfilexfer -display :0 -rfbauth ~/.vnc/passwd
_EOF_

   echo $url | sudo tee /var/local/url > /dev/null 

   echo Installing Website
   webSite
}

webSite() {
    if [ $noEth -ne 1 ]; then
      wget https://github.com/PilotCorp/ManufacturingSignsHostedHtml/archive/master.zip -O ManufacturingSignsHostedHtml.zip -q --progress=bar --show-progress
      sudo unzip -ju ManufacturingSignsHostedHtml.zip ManufacturingSignsHostedHtml-master/* -d /var/www/html > /dev/null
    fi
}

cecInstall() {
    echo Installing cec-client
    #https://github.com/Pulse-Eight/libcec
    #https://github.com/Pulse-Eight/libcec/blob/master/docs/README.raspberrypi.md
    sudo apt-get update
    sudo apt-get install -y cmake liblockdev1-dev libudev-dev libxrandr-dev python-dev swig
    sudo apt-get install -y cmake libudev-dev libxrandr-dev python-dev swig
    cd
    git clone https://github.com/Pulse-Eight/platform.git
    mkdir platform/build
    cd platform/build
    cmake ..
    make
    sudo make install
    cd
    git clone https://github.com/Pulse-Eight/libcec.git
    mkdir libcec/build
    cd libcec/build
    cmake -DRPI_INCLUDE_DIR=/opt/vc/include -DRPI_LIB_DIR=/opt/vc/lib ..
    make -j4
    sudo make install
    sudo ldconfig
}

singleMachineDisplay () {
    echo ------------------------ SINGLE MACHINE DISPLAY SETUP -------------------------
    echo -n "Enter the two character machine code: "
    read machine
    url="$host/${machine^^}"
}

scheduleDisplay () {
    echo --------------------------- SCHEDULE DISPLAY SETUP ----------------------------
    save=
    until [ "${save^^}" = "S" ]; do
        machines=""
        echo Enter the machine codes for the machines to display
        echo Hit enter after each, a blank line will stop input
        read machine
        until [ "$machine" = "" ]; do
            machines="$machines$machine,"
            read machine
        done
        echo "You have entered \"${machines^^}\""
        echo -n "Would you like to save this (S) or re-enter (R) choices [S]: "
        read save
        if [ "$save" = "" ]; then 
            save="S" 
        fi
    done
    pickRotation 
    url="$host/${machines^^}"
}

lanesDisplay () {
    echo ---------------------------- LANES DISPLAY SETUP ------------------------------
    url="$host/Lanes"
}

pickRotation () {
  while [ true ]; do
    cat << _EOF_
Please select one of the following screen rotations:
    0  ) Normal landscape
    90 ) 90 degrees counter-clockwise, portait
    180) Upside down landscape
    270) 270 degress counter-clockwise/90degress clockwise, portait
_EOF_
    read selection
    case $selection in
    0 )
        rotation=0
        break
    ;;
    90 )
        rotation=1
        break
    ;;
    180 )
        rotation=2
        break
    ;;
    270 )
        rotation=3
        break
    ;;
    * )
        echo "Invalid Choice"
        echo
    esac
  done
}

#Actually run the main function
main "$@"
